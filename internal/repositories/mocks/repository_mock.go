// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repositories/repository_mock.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/klemis/packs-calculator/models"
)

// MockPackSizeRepository is a mock of PackSizeRepository interface.
type MockPackSizeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPackSizeRepositoryMockRecorder
}

// MockPackSizeRepositoryMockRecorder is the mock recorder for MockPackSizeRepository.
type MockPackSizeRepositoryMockRecorder struct {
	mock *MockPackSizeRepository
}

// NewMockPackSizeRepository creates a new mock instance.
func NewMockPackSizeRepository(ctrl *gomock.Controller) *MockPackSizeRepository {
	mock := &MockPackSizeRepository{ctrl: ctrl}
	mock.recorder = &MockPackSizeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPackSizeRepository) EXPECT() *MockPackSizeRepositoryMockRecorder {
	return m.recorder
}

// CreatePackSize mocks base method.
func (m *MockPackSizeRepository) CreatePackSize(size uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePackSize", size)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePackSize indicates an expected call of CreatePackSize.
func (mr *MockPackSizeRepositoryMockRecorder) CreatePackSize(size interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePackSize", reflect.TypeOf((*MockPackSizeRepository)(nil).CreatePackSize), size)
}

// DeletePackSize mocks base method.
func (m *MockPackSizeRepository) DeletePackSize(size uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePackSize", size)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePackSize indicates an expected call of DeletePackSize.
func (mr *MockPackSizeRepositoryMockRecorder) DeletePackSize(size interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePackSize", reflect.TypeOf((*MockPackSizeRepository)(nil).DeletePackSize), size)
}

// GetPackSizes mocks base method.
func (m *MockPackSizeRepository) GetPackSizes() ([]models.PackSize, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPackSizes")
	ret0, _ := ret[0].([]models.PackSize)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPackSizes indicates an expected call of GetPackSizes.
func (mr *MockPackSizeRepositoryMockRecorder) GetPackSizes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPackSizes", reflect.TypeOf((*MockPackSizeRepository)(nil).GetPackSizes))
}
